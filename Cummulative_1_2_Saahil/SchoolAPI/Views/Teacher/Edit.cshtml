@model SchoolAPI.Models.Teacher

@{
    ViewData["Title"] = "Edit Teacher";
}

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Edit Teacher</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <style>
        body {
            background-color: #f8f9fa;
        }

        .container {
            max-width: 500px;
            margin-top: 50px;
            background: white;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);
        }

        .form-label {
            font-weight: bold;
        }

        .btn-submit {
            width: 100%;
        }

        .back-link {
            display: block;
            text-align: center;
            margin-top: 15px;
        }

        #responseMessage {
            display: none;
        }
    </style>
</head>

<body>

    <div class="container">
        <h2 class="text-center text-primary">Edit Teacher</h2>

        <form id="teacherForm" method="post">
            <div class="mb-3">
                <label class="form-label">Name:</label>
                <input type="text" class="form-control" id="Name" name="Name" value="@Model.Name" required />
            </div>

            <div class="mb-3">
                <label class="form-label">Hire Date:</label>
                <input type="date" class="form-control" id="HireDate" name="HireDate"
                    value="@Model.HireDate.ToString("yyyy-MM-dd")" required />
            </div>

            <div class="mb-3">
                <label class="form-label">Subject:</label>
                <input type="text" class="form-control" id="Subject" name="Subject" value="@Model.Subject" required />
            </div>

            <div class="mb-3">
                <label class="form-label">Employee Number:</label>
                <input type="text" class="form-control" id="EmployeeNumber" name="EmployeeNumber"
                    value="@Model.EmployeeNumber" required />
            </div>

            <div class="mb-3">
                <label class="form-label">Work Phone:</label>
                <input type="text" class="form-control" id="TeacherWorkPhone" name="TeacherWorkPhone"
                    value="@Model.TeacherWorkPhone" />
            </div>

            <div class="mb-3">
                <label class="form-label">Salary:</label>
                <input type="number" class="form-control" id="Salary" name="Salary" value="@Model.Salary.ToString("F2")"
                    step="0.01" required />
            </div>

            <button type="button" id="updateBtn" class="btn btn-warning btn-submit">Update Teacher</button>
        </form>

        <p id="responseMessage" class="text-center text-danger mt-3"></p>

        <a href="/Teacher/List" class="back-link">‚Üê Back to Teacher List</a>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <script>
        $(document).ready(function () {
            $("#updateBtn").click(function () {
                // Get the values from the form
                var teacherData = {
                    TeacherId: @Model.TeacherId,
                    Name: $("#Name").val(),
                    HireDate: $("#HireDate").val(),
                    Subject: $("#Subject").val(),
                    EmployeeNumber: $("#EmployeeNumber").val(),
                    TeacherWorkPhone: $("#TeacherWorkPhone").val(),
                    Salary: $("#Salary").val()
                };

                // Validate client-side (optional)
                if (teacherData.Name === "") {
                    $("#responseMessage").text("Please fill all required field : Name.").show();
                    return;
                }

                if (teacherData.HireDate === "") {
                    $("#responseMessage").text("Please fill all required field : Hire date.").show();
                    return;
                }

                if (teacherData.Salary < 0) {
                    $("#responseMessage").text("Salary cannot be less than 0 ").show();
                    return;
                }

                // AJAX call to update the teacher
                $.ajax({
                    url: "/api/TeacherAPI/" + teacherData.TeacherId, // Update URL with TeacherId
                    type: "PUT", // Using PUT for update
                    contentType: "application/json",
                    data: JSON.stringify(teacherData),
                    success: function (response) {
                        $("#responseMessage").removeClass("text-danger").addClass("text-success")
                            .text("Teacher updated successfully!").show();
                    },
                    error: function (xhr, status, error) {
                        $("#responseMessage").removeClass("text-success").addClass("text-danger")
                            .text("Error updating teacher: " + xhr.responseJSON.message).show();
                    }
                });
            });
        });
    </script>

</body>

</html>
